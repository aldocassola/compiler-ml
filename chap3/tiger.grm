%%
%term
    EOF 
  | ID of string
  | INT of int | STRING of string 
  | COMMA | COLON | SEMICOLON | LPAREN | RPAREN | LBRACK | RBRACK 
  | LBRACE | RBRACE | DOT 
  | PLUS | MINUS | TIMES | DIVIDE | EQ | NEQ | LT | LE | GT | GE
  | AND | OR | ASSIGN
  | ARRAY | IF | THEN | ELSE | WHILE | FOR | TO | DO | LET | IN | END | OF 
  | BREAK | NIL
  | FUNCTION | VAR | TYPE 

%nonterm  exp | program | expseq | lvalue | letexp | funcall | binexp
          | recordcreate | arraycreate | ifthenelse | ifthen
          | whileexp | forexp | decs | dec | tydec | vardec | fundec | ty 
          | tyfields | tyseq | seqrest | paramlist | bracketed
          | paramrest | rhs | andfactor | compexp | arithexp
          | term | factor | compop | fieldscreate | fieldsrest | exps | expsrest

%pos int
%verbose
%start program
%eop EOF
%noshift EOF

%name Tiger

%keyword WHILE FOR TO BREAK LET IN END FUNCTION VAR TYPE ARRAY IF THEN ELSE 
  DO OF NIL

%prefer THEN ELSE LPAREN

%value ID ("bogus")
%value INT (1)
%value STRING ("")

%%

program : exp ()

exp : expseq ()
    | LPAREN RPAREN ()
    | letexp ()
    | binexp ()
    | recordcreate ()
    | arraycreate ()
    | ifthenelse ()
    | ifthen ()
    | whileexp ()
    | forexp ()
    | BREAK ()

decs :                                ()
     | dec decs                       ()

dec : tydec                           ()
    | vardec                          ()
    | fundec                          ()

tydec : TYPE ID EQ ty                 ()

ty  : ID                              ()
    | LBRACE tyfields RBRACE          ()
    | ARRAY OF ID                     ()

tyfields :                            ()
         | ID COLON ID tyseq          ()

tyseq :                               () 
      | COMMA ID COLON ID tyseq       ()

vardec : VAR ID ASSIGN exp            ()
       | VAR ID COLON ID ASSIGN exp   ()

fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp  ()
       | FUNCTION ID LPAREN tyfields RPAREN  COLON ID EQ exp ()

lvalue : ID                           ()
       | lvalue DOT ID                ()
       | bracketed                    ()

bracketed : lvalue LBRACK exp RBRACK      ()

expseq : LPAREN exp SEMICOLON exp seqrest RPAREN   ()

seqrest :                             ()
        | SEMICOLON exp seqrest       ()

funcall : ID LPAREN paramlist RPAREN  ()

paramlist :                           ()
          | exp paramrest             ()

paramrest :                           () 
          | COMMA exp paramrest       ()

binexp : lvalue ASSIGN rhs            ()
       | rhs                          ()

(* left recursion for left association *)
rhs : rhs OR andfactor                ()
    | andfactor                       ()

andfactor : andfactor AND compexp     ()
          | compexp                   ()

(* comparison operators do not associate *)
compexp : arithexp compop arithexp    ()
        | arithexp                    ()

arithexp : arithexp PLUS term         ()
         | arithexp MINUS term        ()
         | term                       ()

term : term TIMES factor              ()
     | term DIVIDE factor             ()
     | factor                         ()

factor : NIL                          ()
       | INT                          ()
       | STRING                       ()
       | lvalue                       ()
       | funcall                      () 
       | LPAREN exp RPAREN            () 

       (* highest precedence; right recursion to right-associate *)
       | MINUS factor                 ()

compop : EQ                           ()
       | NEQ                          ()
       | LT                           ()
       | GT                           ()
       | GE                           ()
       | LE                           ()

letexp : LET decs IN exps END         ()

exps :                                () 
     | exp expsrest                   ()

expsrest :                            ()
         | SEMICOLON exp expsrest      ()

recordcreate : ID LBRACE fieldscreate RBRACE       ()

fieldscreate :                         ()
             | ID EQ exp fieldsrest    ()

fieldsrest :                           ()
           | COMMA ID EQ exp fieldsrest ()

arraycreate : bracketed OF exp ()

ifthenelse : IF exp THEN exp ELSE exp   ()

ifthen : IF exp THEN exp                ()

whileexp : WHILE exp DO exp                ()

forexp : FOR ID ASSIGN exp TO exp DO exp   ()


